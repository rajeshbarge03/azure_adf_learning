{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "gptl-azuredf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_act_filter_learning')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filter1",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.name_list",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(toUpper(item()),'R')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Filter1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "r_list",
							"value": {
								"value": "@activity('Filter1').output.Value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Filter2",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.name_list",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(toUpper(item()),'M' )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Filter2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "m_list",
							"value": {
								"value": "@activity('Filter2').output.Value",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Filter3",
						"type": "Filter",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.name_list",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(not(startswith(toUpper(item()),'R')),\nnot(startswith(toUpper(item()),'M')))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Filter3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "other_list",
							"value": {
								"value": "@activity('Filter3').output.Value",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"name_list": {
						"type": "array"
					}
				},
				"variables": {
					"r_list": {
						"type": "Array",
						"defaultValue": [
							"Ram",
							"Patil",
							"sham",
							"manoj",
							"manish",
							"Rohan",
							"kiran"
						]
					},
					"m_list": {
						"type": "Array"
					},
					"other_list": {
						"type": "Array"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}